{"version":3,"sources":["components/Jumbotron/index.js","components/Wrapper/index.js","components/Card/index.js","App.js","index.js"],"names":["Jumbotron","props","currentScore","highScore","react_default","a","createElement","className","Wrapper","children","Card","src","image","alt","name","onClick","handleClick","id","App","state","logoList","logos","key","score","handleHighScore","_this$state","_this","setState","incrementCount","shuffleLogos","shuffledLogoList","sort","Math","random","console","log","includes","alert","newKeys","concat","Object","toConsumableArray","_this2","this","Fragment","components_Jumbotron","components_Wrapper","map","logo","components_Card","React","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"8wDAmBeA,MAbf,SAAoBC,GAAO,IAEfC,EAA4BD,EAA5BC,aAAcC,EAAcF,EAAdE,UAC1B,OACAC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yCACXH,EAAAC,EAAAC,cAAA,sCACAF,EAAAC,EAAAC,cAAA,kNACAF,EAAAC,EAAAC,cAAA,gCAAwBJ,GACxBE,EAAAC,EAAAC,cAAA,gCAAwBH,WCNbK,MALf,SAAiBP,GACb,OAAOG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACjBN,EAAMQ,iBCiBAC,MAlBX,SAAcT,GACV,OACAG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,OACIK,IAAKV,EAAMW,MACXC,IAAKZ,EAAMa,KACXC,QAAS,kBAAMd,EAAMe,YAAYf,EAAMgB,iBCyF5CC,oNAxFbC,MAAQ,CACNC,SAAUC,EACVC,IAAK,GACLC,MAAO,EACPpB,UAAW,KAKbqB,gBAAkB,WAAM,IAAAC,EACKC,EAAKP,MAAzBI,EADeE,EACfF,MACHA,EAFkBE,EACRtB,WAEZuB,EAAKC,SAAS,CACZxB,UAAWoB,OAKjBK,eAAiB,WACfF,EAAKC,SAAS,WACZ,MAAO,CACLJ,MAAOG,EAAKP,MAAMI,MAAQ,QAMhCM,aAAe,WACb,IAAMC,EAAmBJ,EAAKP,MAAMC,SAASW,KAAK,iBAAM,GAAMC,KAAKC,WAEnEP,EAAKC,SAAS,CACZP,SAAUU,OAIdd,YAAc,SAAAC,GAGZ,GAFAiB,QAAQC,IAAIlB,GAERS,EAAKP,MAAMG,IAAIc,SAASnB,GAC1BoB,MAAM,2CAENX,EAAKC,SAAS,CACZJ,MAAO,EACPD,IAAK,KAEPI,EAAKF,sBAEF,CACH,IAAMc,EAAO,GAAAC,OAAAC,OAAAC,EAAA,EAAAD,CAAOd,EAAKP,MAAMG,KAAlB,CAAuBL,IAEpCS,EAAKC,SAAS,CACZL,IAAKgB,IAEPJ,QAAQC,IAAI,OACZT,EAAKE,iBAEPF,EAAKG,wFAGE,IAAAa,EAAAC,KAEP,OADAT,QAAQC,IAAIQ,KAAKxB,OAEff,EAAAC,EAAAC,cAACF,EAAAC,EAAMuC,SAAP,KACExC,EAAAC,EAAAC,cAACuC,EAAD,CACA3C,aAAgByC,KAAKxB,MAAMI,MAC3BpB,UAAawC,KAAKxB,MAAMhB,YAExBC,EAAAC,EAAAC,cAACwC,EAAD,KAEIH,KAAKxB,MAAMC,SAAS2B,IAAI,SAAAC,GACtB,OACE5C,EAAAC,EAAAC,cAAC2C,EAAD,CACE3B,IAAK0B,EAAK/B,GACVH,KAAMkC,EAAKlC,KACXF,MAAOoC,EAAKpC,MACZK,GAAI+B,EAAK/B,GACTD,YAAa0B,EAAK1B,yBA/ElBkC,IAAMC,YCJxBC,IAASC,OAAOjD,EAAAC,EAAAC,cAACgD,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.37edbe54.chunk.js","sourcesContent":["import React from 'react'\nimport './style.css'\n\n\n \n\nfunction Jumbotron (props) {\n\n    const { currentScore, highScore } = props;\nreturn(\n<div className=\"jumbotron jumbotron-fluid text-center\">\n    <h2>Let's Test Your Memory!!</h2>\n    <small>Start by clicking an image, when the images shuffle choose wisely!! Choose the same image and lose, choose a different image they will shuffle and choose again. Hit 25 different images to WIN!!</small>\n    <p>Your Current Score: {currentScore}</p>\n    <p>Your Highest Score: {highScore}</p>\n</div>\n)};\n\n\nexport default Jumbotron;","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n    return <div className=\"wrapper\">\n        {props.children}</div>\n}\n\nexport default Wrapper;","import React from \"react\";\nimport \"./style.css\";\n\n\n    function Card(props) {\n        return (\n        <div className=\"card\">\n            <div className=\"img-container\">\n                <img\n                    src={props.image}\n                    alt={props.name}\n                    onClick={() => props.handleClick(props.id)}\n                />\n            </div>\n        </div>\n    )\n\n    };\n\n\n\n\nexport default Card;","import React from 'react';\nimport Jumbotron from \"./components/Jumbotron\"\nimport Wrapper from \"./components/Wrapper\"\nimport Card from \"./components/Card\"\nimport logos from './logo.json';\nimport './App.css';\n\n\n\nclass App extends React.Component {\n  // set up state and have it keep track of my logoList that is being imported over from logo.json\n\n  state = {\n    logoList: logos,\n    key: [],\n    score: 0,\n    highScore: 0\n  }\n\n\n\n  handleHighScore = () => {\n    const {score, highScore} = this.state\n    if (score > highScore){\n      this.setState({\n        highScore: score\n      })\n    }\n  }\n\n  incrementCount = () => {\n    this.setState(() => {\n      return {\n        score: this.state.score + 1\n      }\n    });\n  }\n\n\n  shuffleLogos = () => {\n    const shuffledLogoList = this.state.logoList.sort(() => 0.5 - Math.random());\n\n    this.setState({\n      logoList: shuffledLogoList\n    });\n  };\n\n  handleClick = id => {\n    console.log(id);\n\n    if (this.state.key.includes(id)) {\n      alert('You picked the same logo, start again!!')\n      // shuffle cards and reset score to 0\n      this.setState({\n        score: 0,\n        key: [],\n      })\n      this.handleHighScore()\n    }\n    else {\n      const newKeys = [...this.state.key, id];\n      // shuffle cards and update score by one\n      this.setState({\n        key: newKeys\n      })\n      console.log(\"win\")\n      this.incrementCount()\n    }\n    this.shuffleLogos()\n  };\n\n  render() {\n    console.log(this.state)\n    return (\n      <React.Fragment>\n        <Jumbotron\n        currentScore = {this.state.score}\n        highScore = {this.state.highScore}\n        />\n        <Wrapper>\n          {\n            this.state.logoList.map(logo => {\n              return (\n                <Card\n                  key={logo.id}\n                  name={logo.name}\n                  image={logo.image}\n                  id={logo.id}\n                  handleClick={this.handleClick}\n                />\n              )\n            })\n          }\n        </Wrapper>\n      </ React.Fragment>\n    )\n  }\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}